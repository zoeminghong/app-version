version : '3'
services:
  mysql:
    image: mysql/mysql-server:5.7.18
    container_name: mysql
    networks:
      - net-spring-db
    ports:
      - "3306:3306"
    volumes:
      - ./tmp/mysql:/var/lib/mysql
      - ./tmp/log/mysql:/var/log/mysql
#      - ./bin/app_version_manager.sql:/docker-entrypoint-initdb.d
    restart: always
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--lower_case_table_names=1',
      '--default-time-zone=+8:00']
    environment:
      MYSQL_DATABASE: app_version_manager
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456

  redis:
    image: redis:3.2.10
    container_name: redis
    networks:
      - net-spring-db
    ports:
      - "6379:6379"
    volumes:
      - ./tmp/redis/:/var/lib/redis/
    restart: always
  managerservice:
    image: app/app-version-manager
    container_name: app-version-manager
    ports:
      - "8086:8086"
    networks:
      - net-spring-db
    volumes:
      - /tmp:/tmp
    depends_on:
      - mysql
      - redis
    environment:
      - TZ=Asia/Shanghai
      - APP_PROFILE=dev

  restservice:
    image: app/app-version-rest
    container_name: app-version-rest
    ports:
      - "8084:8084"
    networks:
      - net-spring-db
    volumes:
      - /tmp:/tmp
    depends_on:
      - mysql
      - redis
    environment:
      - TZ=Asia/Shanghai
      - APP_PROFILE=dev
      # 标识是否在检查更新时只检查相同渠道的新版本
      - ENV_CHECK_SAME_CHANNEL=true
  web:
    image: nginx:latest
    container_name: app-version-web
    ports:
      - "8088:80"
    volumes:
      - ./web/dashboard/dist:/usr/share/nginx/html:ro
      - ./bin/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - managerservice
      - restservice
    networks:
       - net-spring-db
    restart: always

networks:
  net-spring-db:
    driver: bridge
